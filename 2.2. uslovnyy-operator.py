#A
#Просто здравствуй, просто как дела
#Умение вести диалог — важный навык для воспитанного человека.
#
#Напишите диалоговую программу, которая сначала познакомится с пользователем, а затем поинтересуется его настроением.
#
#Формат ввода
#В первой строке записано имя пользователя.
#Во второй — ответ на вопрос: «хорошо» или «плохо».
#
#Формат вывода
#В первой строке должен быть вопрос «Как Вас зовут?»
#Во второй строке — «Здравствуйте, %username%!»
#В третьей строке — вопрос «Как дела?»
#В четвёртой строке реакция на ответ пользователя:
#
#если пользователь ответил «хорошо», следует вывести сообщение «Я за вас рада!»;
#если пользователь ответил «плохо», следует вывести сообщение «Всё наладится!».
#Пример 1
#Ввод
#Аня
#хорошо
#Вывод
#Как Вас зовут?
#Здравствуйте, Аня!
#Как дела?
#Я за вас рада!
#Пример 2
#Ввод
#Боря
#плохо
#Вывод
#Как Вас зовут?
#Здравствуйте, Боря!
#Как дела?
#Всё наладится!

print("Как Вас зовут?")
name = input()
print(f"Здравствуйте, {name}!")
print("Как дела?")
answer = input()
if answer == 'хорошо':
    print('Я за вас рада!')
else:
    print('Всё наладится!')


#B
#Кто быстрее?
#В главной велогонке года участвует более тысячи гонщиков. Им предстоит пройти трассу длиной 43872м. Самая сложная и ответственная задача — определение победителя.
#Нам известны средние скорости двух фаворитов — Пети и Васи. Помогите выяснить, кто из них пришёл к финишу первым.
#
#Формат ввода
#В первой строке записана средняя скорость Пети.
#Во второй — Васи.
#
#Формат вывода
#Имя победителя гонки.
#
#Примечание
#Гарантируется, что победителем стал только один.
#
#Пример 1
#Ввод
#10
#5
#Вывод
#Петя
#Пример 2
#Ввод
#5
#7
#Вывод
#Вася

p = int(input())
v = int(input())
if p > v:
    print('Петя')
else:
    print('Вася')


#C
#Кто быстрее на этот раз?
#Вновь велогонщики собрались узнать, кто из них быстрее. Им предстоит пройти трассу длиной 43872м, и нам нужно вновь определить победителя.
#На этот раз нам известны средние скорости трёх фаворитов — Пети, Васи и Толи. Кто из них пришёл к финишу первым?
#
#Формат ввода
#В первой строке записана средняя скорость Пети.
#Во второй — Васи.
#В третьей — Толи.
#
#Формат вывода
#Имя победителя гонки.
#
#Примечание
#Гарантируется, что победителем стал только один.
#
#Пример 1
#Ввод
#10
#5
#7
#Вывод
#Петя
#Пример 2
#Ввод
#5
#7
#10
#Вывод
#Толя

p = int(input())
v = int(input())
t = int(input())
if p > v:
    if p > t:
        print('Петя')
    else:
        print('Толя')
else:
    if v > t:
        print('Вася')
    else:
        print('Толя')


#D
#Список победителей
#Длина трассы — 43872м, и зрители хотят узнать имя победителя.
#Нам известны средние скорости трёх фаворитов – Пети, Васи и Толи. Помогите подвести итоги гонки.
#
#Формат ввода
#В первой строке записана средняя скорость Пети.
#Во второй — Васи.
#В третьей — Толи.
#
#Формат вывода
#Имена победителей в порядке занятых мест.
#
#Пример 1
#Ввод
#10
#5
#7
#Вывод
#1. Петя
#2. Толя
#3. Вася
#Пример 2
#Ввод
#5
#7
#10
#Вывод
#1. Толя
#2. Вася
#3. Петя

p = int(input())
v = int(input())
t = int(input())
if t <= v <= p:
    print('1. Петя')
    print('2. Вася')
    print('3. Толя')
elif t <= p <= v:
    print('1. Вася')
    print('2. Петя')
    print('3. Толя')
elif v <= t <= p:
    print('1. Петя')
    print('2. Толя')
    print('3. Вася')
elif p <= t <= v:
    print('1. Вася')
    print('2. Толя')
    print('3. Петя')
elif p <= v <= t:
    print('1. Толя')
    print('2. Вася')
    print('3. Петя')
else:
    print('1. Толя')
    print('2. Петя')
    print('3. Вася')


#E
#Яблоки
#У Пети было 7 яблок, а у Васи 6.
#Затем Петя отдал 3 яблока Васе, а у Толи взял 2 яблока.
#Вася попросил у Толи 5 яблок, но он отдал Гене 2.
#Затем Дима дал Пете N яблок, а Васе M. Так у кого в итоге яблок больше — у Пети или Васи?
#
#Формат ввода
#В первой строке записано натуральное число N. Во второй — M.
#
#Формат вывода
#Имя ребёнка, у которого больше яблок.
#
#Пример 1
#Ввод
#3
#5
#Вывод
#Вася
#Пример 2
#Ввод
#10
#2
#Вывод
#Петя

n = int(input())
m = int(input())
if 7 - 3 + 2 + n > 6 + 3 + 5 - 2 + m:
    print('Петя')
else:
    print('Вася')


#F
#Сила прокрастинации
#Вася любит полениться. Особенно ему нравится, когда в году появляется такой лишний денёк, которого обычно не бывает. Напишите программу, которая поможет Васе определить, удастся ли ему побездельничать в определённом году или нет.
#
#Формат ввода
#Одно число — год.
#
#Формат вывода
#Одно слово «YES» (удастся) или «NO» (не удастся).
#
#Пример 1
#Ввод
#2022
#Вывод
#NO
#Пример 2
#Ввод
#2020
#Вывод
#YES

year = int(input())  # считываем год 
if year % 4 == 0 and (year % 100 != 0 or year % 400 == 0): 
    print("YES")  # если год високосный, выводим "YES" 
else: 
    print("NO")  # если год не високосный, выводим "NO"


#G
#А роза упала на лапу Азора
#Существуют такое интересное понятие как палиндром — число, слово, предложение и так далее, которое и слева-направо, и справа-налево читается одинаково.
#Напишите программу, которая проверяет, является ли число палиндромом.
#
#Формат ввода
#Одно четырёхзначное число
#
#Формат вывода
#YES если число является палиндромом, иначе — NO.
#
#Пример 1
#Ввод
#1234
#Вывод
#NO
#Пример 2
#Ввод
#2332
#Вывод
#YES

n = int(input())
if n % 10 * 1000 + n // 10 % 10 * 100 + n // 100 % 10 * 10 + n // 1000 == n:
    print('YES')
else:
    print('NO')


#H
#Зайка — 1
#В долгой дороге дети могут капризничать, поэтому родители их развлекают с помощью игр. Одна из них — поиск различных зверушек в придорожной растительности.
#Давайте немного поиграем и выясним, не спрятался ли зайка во введённом предложении.
#
#Формат ввода
#Строка описывающая придорожную местность.
#
#Формат вывода
#YES — если в этой местности есть зайка, иначе — NO.
#
#Пример 1
#Ввод
#березка елочка зайка волк березка
#Вывод
#YES
#Пример 2
#Ввод
#сосна сосна сосна елочка грибочки медведь
#Вывод
#NO

text = input()
if "зайка" in text:
    print("YES")
else:
    print("NO")


#I
#Первому игроку приготовиться
#Во многих играх порядок определяется броском кубика или монетки, — а в нашей первым ходит тот, чьё имя лексикографически меньше.
#Определите, кто из игроков будет ходить первым.
#
#Формат ввода
#Три имени игроков, каждое из которых записано с новой строки.
#
#Формат вывода
#Имя игрока, который будет ходить первым.
#
#Пример 1
#Ввод
#Вова
#Аня
#Боря
#Вывод
#Аня
#Пример 2
#Ввод
#Толя
#Коля
#Вася
#Вывод
#Вася

name1 = input()
name2 = input()
name3 = input()
print(min(name1, name2, name3))


#J
#Лучшая защита — шифрование
#Коля испугался, что Аня подсмотрит все его пароли в блокноте, и решил их зашифровать. Для этого он берёт изначальный пароль — трёхзначное число — и по нему строит новое число по следующим правилам:
#находится сумма цифр, стоящих в двух младших разрядах (десятки и единицы);
#находится сумма цифр, стоящих в двух старших разрядах (сотни и десятки)
#Эти две суммы, записанные друг за другом, в порядке не возрастания, формируют новое число.
#Помогите реализовать алгоритм шифрования.
#
#Формат ввода
#Одно трёхзначное число
#
#Формат вывода
#Результат шифрования
#
#Пример 1
#Ввод
#123
#Вывод
#53
#Пример 2
#Ввод
#741
#Вывод
#115

n = int(input())
s1 = n % 10 + n // 10 % 10
s2 = n // 10 % 10 + n // 100
if s1 >= s2:
    print(str(s1) + str(s2))
else:
    print(str(s2) + str(s1))


#K
#Красота спасёт мир
#Одно из древних поверий гласит, что трёхзначное число красиво, если сумма его минимальной и максимальной цифр равна оставшейся цифре умноженной на 2.
#Напишите систему определяющую красоту числа.
#
#Формат ввода
#Одно трёхзначное число
#
#Формат вывода
#YES — если число красивое, иначе — NO
#
#Пример 1
#Ввод
#123
#Вывод
#YES
#Пример 2
#Ввод
#748
#Вывод
#NO

n = int(input())
s1 = n // 100
s2 = n // 10 % 10
s3 = n % 10
if s1 != max(s1, s2, s3) and s1 != min(s1, s2, s3):
    sr = s1
elif s2 != max(s1, s2, s3) and s2 != min(s1, s2, s3):
    sr = s2
else:
    sr = s3
if sr * 2 == min(s1, s2, s3) + max(s1, s2, s3):
    print('YES')
else:
    print('NO')


#L
#Музыкальный инструмент
#Есть много музыкальных инструментов, но Вася обожает треугольник.
#У него завалялось немного алюминиевых трубочек разной длины, и он задаётся вопросом, а можно ли из них сделать любимый музыкальный инструмент.
#
#Формат ввода
#Три числа — длины трубочек, каждое с новой строки.
#
#Формат вывода
#YES — если Васе удастся создать музыкальный треугольник, иначе — NO
#
#Примечание
#Обратите внимание, что в треугольнике любая сторона меньше суммы двух других.
#
#Пример 1
#Ввод
#3
#3
#3
#Вывод
#YES
#Пример 2
#Ввод
#1
#2
#3
#Вывод
#NO

a = int(input())
b = int(input())
c = int(input())
if a + b > c and a + c > b and b + c > a:
    print('YES')
else:
    print('NO')


#M
#Властелин Чисел: Братство общей цифры
#Во времена магии и драконов существовало мнение, что числа обладают великой силой, способной изменить мир.
#Всё началось с написания великих чисел. Три числа были переданы эльфам. Семь — отданы повелителям гномов. А девять... были переданы человеческому роду.
#Но все они оказались обмануты, потому что существовало ещё одно число. В стране Нумия на бумаге из тёмного папируса властелин Зерон тайно написал Единую Цифру, подчиняющую себе все великие числа.
#Давайте выясним, что это за цифра.
#
#Формат ввода
#В первой строке записано двузначное число одного из эльфов.
#Во второй строке — Гномов.
#В третьей — Людей.
#
#Формат вывода
#Одна цифра — общая у всех трёх чисел в одинаковой позиции
#
#Пример 1
#Ввод
#12
#13
#14
#Вывод
#1
#Пример 2
#Ввод
#23
#13
#63
#Вывод
#3

a = int(input())
b = int(input())
c = int(input())
if (a % 10) == (b % 10) == (c % 10):
    print(a % 10)
if (a // 10 % 10) == (b // 10 % 10) == (c // 10 % 10):
    print(a // 10 % 10)


#N
#Властелин Чисел: Две Башни
#Во времена, когда люди верили в великую силу чисел, оказалось, что волшебник Пифуман предал все народы и стал помогать Зерону.
#Чтобы посетить башни обоих злодеев одновременно, нам следует разделить магию числа, которое защищало нас в дороге.
#Чтобы поделить трёхзначное число, нам нужно составить из него минимально и максимально возможные двухзначные числа.
#
#Формат ввода
#Одно трёхзначное число.
#
#Формат вывода
#Два защитных числа для каждого отряда, записанные через пробел.
#
#Пример 1
#Ввод
#103
#Вывод
#10 31
#Пример 2
#Ввод
#787
#Вывод
#77 87

n = int(input())
a = n % 10
b = n // 10 % 10
c = n // 100 % 10
if a >= b and a >= c:
    maxi = a
    if b >= c:
        mini = c
        sred = b
    else:
        mini = b
        sred = c
elif b >= a and b >= c:
    maxi = b
    if a >= c:
        mini = c
        sred = a
    else:
        mini = a
        sred = c
else:
    maxi = c
    if b >= a:
        mini = a
        sred = b
    else:
        mini = b
        sred = a
if mini != 0:
    print(f'{mini}{sred} {maxi}{sred}')
else:
    print(f'{sred}{mini} {maxi}{sred}')


#O
#Властелин Чисел: Возвращение Цезаря
#До победы над злом остался один шаг — разрушить логово Зерона.
#Для этого нужно создать трёхзначное магическое число, которое будет сильнее двух двухзначных защитных чисел Зерона.
#Самый простой способ создать сильное число:
#первой взять максимальную цифру из всех защитных чисел;
#последней — минимальную;
#в середину поставить сумму оставшихся без учёта переноса разряда.
#Помогите одолеть зло.
#
#Формат ввода
#В двух строках записаны защитные числа Зерона.
#
#Формат вывода
#Одно трёхзначное число, которое приведёт к победе.
#
#Пример 1
#Ввод
#31
#11
#Вывод
#321
#Пример 2
#Ввод
#49
#17
#Вывод
#911

n1 = int(input())
n2 = int(input())
a = n1 // 10
b = n1 % 10
c = n2 // 10
d = n2 % 10
sr = (a + b + c + d - max(a, b, c, d) - min(a, b, c, d)) % 10
print(f'{max(a, b, c, d)}{sr}{min(a, b, c, d)}')


#P
#Легенды велогонок возвращаются: кто быстрее?
#В новом сезоне за первенство в велогонках вновь борются лучшие из лучших. Протяжённость заключительной трассы — 43872м, и все хотят знать, кто получит золотую медаль.
#Нам известны средние скорости трёх претендентов на победу – Пети, Васи и Толи. Кто из них победит?
#
#Формат ввода
#В первой строке записана средняя скорость Пети.
#Во второй — Васи.
#В третьей — Толи.
#
#Формат вывода
#Красивый пьедестал (ширина ступеней 8 символов).
#
#Примечание
#В данный момент визуализация тестов работает некорректно.
#Ответ на первый тест:
#
#          Петя          
#  Толя  
#                  Вася  
#   II      I      III   
#Пример 1
#Ввод
#10
#5
#7
#Вывод
#          Петя          
#  Толя  
#                  Вася  
#   II      I      III   
#Пример 2
#Ввод
#5
#7
#10
#Вывод
#          Толя          
#  Вася  
#                  Петя  
#   II      I      III   

p = int(input())
v = int(input())
t = int(input())
m = ' '
if t <= v <= p:
    print(f'{"Петя": ^24}')
    print(f'{"Вася": ^8}' + m * 16)
    print(m * 16 + f'{"Толя": ^8}')
elif t <= p <= v:
    print(f'{"Вася": ^24}')
    print(f'{"Петя": ^8}' + m * 16)
    print(m * 16 + f'{"Толя": ^8}')
elif v <= t <= p:
    print(f'{"Петя": ^24}')
    print(f'{"Толя": ^8}' + m * 16)
    print(m * 16 + f'{"Вася": ^8}')
elif p <= t <= v:
    print(f'{"Вася": ^24}')
    print(f'{"Толя": ^8}' + m * 16)
    print(m * 16 + f'{"Петя": ^8}')
elif p <= v <= t:
    print(f'{"Толя": ^24}')
    print(f'{"Вася": ^8}' + m * 16)
    print(m * 16 + f'{"Петя": ^8}')
else:
    print(f'{"Толя": ^24}')
    print(f'{"Петя": ^8}' + m * 16)
    print(m * 16 + f'{"Вася": ^8}')
print(f'{"II": ^8}' + f'{"I": ^8}' + f'{"III": ^8}')


#Q
#Корень зла
#Не все любят математику, а кто-то даже считает её настоящим злом во плоти, хотя от неё никуда не деться. К примеру, Python изначально разрабатывался только для решения математических задач, поэтому давайте используем его, чтобы найти корни уравнения.
#
#Формат ввода
#Вводится 3 вещественных числа a, b, c — коэффициенты уравнения вида: ax^2 + bx + c = 0.
#
#Формат вывода
#Если у уравнения нет решений — следует вывести «No solution».
#Если корней конечное число — их нужно вывести через пробел в порядке возрастания с точностью до сотых.
#Если корней неограниченное число — следует вывести «Infinite solutions».
#
#Примечание
#Обратите внимание, что ограничения на значения коэффициентов отсутствуют.
#
#Пример 1
#Ввод
#1
#-2
#1
#Вывод
#1.00
#Пример 2
#Ввод
#3.5
#-2.4
#-7.3
#Вывод
#-1.14 1.83

a = float(input()) 
b = float(input()) 
c = float(input()) 
d = b ** 2 - 4 * a * c
if (a == 0):
    if b == 0 and c == 0:
        print('Infinite solutions')
    elif c != 0 and b == 0:
        print('No solution') 
    elif b != 0 and c == 0:
        x1 = 0
        print(f'{x1:.2f}')
    elif b != 0 and c != 0:
        x1 = - c / b
        print(f'{x1:.2f}')
elif a != 0:
    if d < 0:
        print('No solution')
    if d == 0: 
        x1 = - b / (2 * a)
        print(f'{x1:.2f}')
    if d > 0:
        x1 = (- b + d ** 0.5) / (2 * a) 
        x2 = (- b - d ** 0.5) / (2 * a)  
        if x1 > x2:
            print(f'{x2:.2f} {x1:.2f}') 
        else:
            print(f'{x1:.2f} {x2:.2f}') 


#R
#Территория зла
#В давние времена считалось, что если какая-то местность является треугольником, то в ней заключено страшное зло.
#При этом люди оценивали риск встретить зло по форме этого треугольника:
#в остроугольном треугольнике вероятность встретить зло крайне мала;
#в тупоугольном — велика;
#в прямоугольном — 100%.
#Напишите программу, которая по длине сторон треугольной местности, определяет вероятность встретить зло.
#
#Формат ввода
#Три числа — длины сторон треугольной местности.
#
#Формат вывода
#Вероятность встретить зло согласно поверью:
#крайне мала;
#велика;
#100%.
#Пример 1
#Ввод
#3
#5
#4
#Вывод
#100%
#Пример 2
#Ввод
#6
#3
#4
#Вывод
#велика

a = int(input())
b = int(input())
c = int(input())
if (a ** 2 == b ** 2 + c ** 2) or (b ** 2 == a ** 2 + c ** 2) or (c ** 2 == b ** 2 + a ** 2):
    print("100%")
elif (a ** 2 > b ** 2 + c ** 2) or (b ** 2 > a ** 2 + c ** 2) or (c ** 2 > b ** 2 + a ** 2):
    print("велика")
else:
    print("крайне мала")


#S
#Автоматизация безопасности
#Группа исследователей собирается высадиться на остров невероятно ровной формы, но разведка при помощи спутника выяснила, что на острове есть зона зыбучих песков.
#Для повышения безопасности экспедиции было решено разработать систему оповещения, которая предупредит исследователей об опасности. А для снижения расходов на производство было решено заказать программное обеспечение.
#Схема: https://new.contest.yandex.ru/api/static/contest/markdown-image?problemId=149944/2022_10_12/ZHMJWMoxqb&path=scheme.png
#Напишите программу, которая по координатам исследователя, будет сообщать о безопасности в этой точке.
#
#Формат ввода
#Два рациональных числа — координаты исследователя.
#
#Формат вывода
#Одно из сообщений:
#
#Опасность! Покиньте зону как можно скорее!
#Зона безопасна. Продолжайте работу.
#Вы вышли в море и рискуете быть съеденным акулой!
#Пример 1
#Ввод
#3.5
#-3.2
#Вывод
#Опасность! Покиньте зону как можно скорее!
#Пример 2
#Ввод
#-5.2
#3.4
#Вывод
#Зона безопасна. Продолжайте работу.

x = float(input())
y = float(input())
if y < 0:
    if (-1 * ((100 - (x ** 2)) ** 0.5)) >= y:
        print("Вы вышли в море и рискуете быть съеденным акулой!")
    elif 0.25 * (x ** 2) + 0.5 * x - 8.75 >= y:
        print("Зона безопасна. Продолжайте работу.")
    else:
        print("Опасность! Покиньте зону как можно скорее!")
else:
    if x >= 0:
        if ((100 - (x ** 2)) ** 0.5) <= y:
            print("Вы вышли в море и рискуете быть съеденным акулой!")
        elif ((25 - (x ** 2)) ** 0.5) <= y:
            print("Зона безопасна. Продолжайте работу.")
        else:
            print("Опасность! Покиньте зону как можно скорее!")
    else:
        if ((100 - (x ** 2)) ** 0.5) <= y:
            print("Вы вышли в море и рискуете быть съеденным акулой!")
        elif (x * (5 / 3) + (35 / 3)) >= y and y <= 5:
            print("Опасность! Покиньте зону как можно скорее!")
        else:
            print("Зона безопасна. Продолжайте работу.")


#T
#Зайка — 2
#По пути домой родители вновь решили сыграть с детьми в поиск зверушек.
#
#Формат ввода
#Три строки описывающих придорожную местность.
#
#Формат вывода
#Строка в которой есть зайка, а затем её длина.
#Если таких строк несколько, выбрать ту, что меньше всех лексикографически.
#
#Пример 1
#Ввод
#березка елочка зайка волк березка
#сосна сосна сосна елочка грибочки медведь
#сосна сосна сосна белочка сосна белочка
#Вывод
#березка елочка зайка волк березка 33
#Пример 2
#Ввод
#зайка березка
#березка зайка
#березка елочка березка
#Вывод
#березка зайка 13

s1 = input()
s2 = input()
s3 = input()
s = 'яя'
m = 'зайка'
if 'зайка' in s1:
    s = s1
    d = len(s)
if 'зайка' in s2 and s2 < s:
    s = s2
    d = len(s)
if 'зайка' in s3 and s3 < s:
    s = s3
    d = len(s)
print(f'{s} {d}')